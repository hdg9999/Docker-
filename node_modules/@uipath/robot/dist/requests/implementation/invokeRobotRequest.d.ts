import { Job, Response, ServerFeatures } from '../../models/index';
import { IRequest } from '../iRequest';
/**
 * Request class to invoke any robot from local system.
 */
export declare class InvokeRobotRequest implements IRequest<Job> {
    url: string;
    job: Job;
    /**
     * Default constructor.
     * @param job The robot Job to run.
     */
    constructor(job: Job);
    /**
     * Method that sends the request to invoke a robot.
     * @returns Promise of Response model type.
     */
    send: (serverFeatures: ServerFeatures) => Promise<Response<Job>>;
    /**
     * Set the port to which the request should be sent along with the consent code.
     * @param robotInvocationPort Port on which local listener is running.
     * @param consentCode User consented code.
     */
    set(robotInvocationPort: number, consentCode: number): this;
    /**
     * Mapper method used to convert string response to desired Job model.
     * @param data HttpResponse data sent from listener.
     * @returns Job to uniquely identify this robot process execution.
     */
    private convertToJob;
    /**
     * Method that returns the request endpoint to which request will be sent.
     * @param robotInvocationPort Port of local listener to which request should be sent.
     * @param consentCode User approved consent code if any.
     */
    private getURL;
}
