import { Response } from '../../models/index';
import { InstallProcessResult } from '../../models/installProcessResult';
import { IRequest } from '../iRequest';
/**
 * Request class to install a process and retrieve the input arguments schema.
 */
export declare class InstallProcessRequest implements IRequest<InstallProcessResult> {
    processId: string;
    url: string;
    /**
     * Default constructor.
     * @param processId Process Id of the process to install.
     */
    constructor(processId: string);
    /**
     * Method that sends the request to install a process.
     * @returns Promise of Response model type.
     */
    send: () => Promise<Response<InstallProcessResult>>;
    /**
     * Set the port to which the request should be sent along with the consent code.
     * @param robotInvocationPort Port on which local listener is running.
     * @param consentCode User consented code.
     */
    set(robotInvocationPort: number, consentCode: number): this;
    /**
     * Mapper method used to convert string response to desired InstallProcessResult model.
     * @param data HttpResponse data sent from listener.
     * @returns InstallProcessResult.
     */
    private convertToResult;
    /**
     * Method that returns the request endpoint to which request will be sent.
     * @param robotInvocationPort Port of local listener to which request should be sent.
     * @param consentCode User approved consent code if any.
     */
    private getURL;
}
